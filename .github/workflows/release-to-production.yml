# This workflow is used once a feature has been merged into main, it will perform lightweight CI and deploy through all the environments to production.

name: Release to Production

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  dotnet-web-ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: frasermolyneux/actions/dotnet-web-ci@main
      with:
        dotnet-project: "servers-integration-webapi"
        dotnet-version: 7.0.x
        src-folder: "src"

  publish-nuget-packages:
    environment: NuGet
    runs-on: ubuntu-latest
    needs: [dotnet-web-ci]

    steps:
      - uses: actions/checkout@v3

      - uses: frasermolyneux/actions/publish-nuget-packages@main
        with:
          artifact-name: "nuget-packages"
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  bicep-build-and-apply-dev: 
    environment: Development
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: ./.github/actions/bicep-build-and-apply
      with:
        environment: dev
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  app-service-deploy-dev:
    environment: DevelopmentWebApps
    runs-on: ubuntu-latest
    needs: [dotnet-web-ci, bicep-build-and-apply-dev]

    steps:
      - uses: actions/checkout@v3

      - shell: pwsh
        run: |
          $webAppName = az deployment group show --name portal-servers-integration-workload-dev --resource-group rg-portal-servers-integration-dev-uksouth --output tsv --query properties.outputs.webAppName.value
          echo "webAppName=$webAppName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - uses: frasermolyneux/actions/deploy-app-service@main
        with:
          web-artifact-name: "servers-integration-webapi"
          web-app-name: ${{ env.webAppName }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  bicep-build-and-apply-prd: 
    environment: Production
    runs-on: ubuntu-latest
    needs: [app-service-deploy-dev]

    steps:
    - uses: actions/checkout@v3

    - uses: ./.github/actions/bicep-build-and-apply
      with:
        environment: prd
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  app-service-deploy-prd:
    environment: ProductionWebApps
    runs-on: ubuntu-latest
    needs: [bicep-build-and-apply-prd]

    steps:
      - uses: actions/checkout@v3

      - shell: pwsh
        run: |
          $webAppName = az deployment group show --name portal-servers-integration-workload-prd --resource-group rg-portal-servers-integration-prd-uksouth --output tsv --query properties.outputs.webAppName.value
          echo "webAppName=$webAppName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - uses: frasermolyneux/actions/deploy-app-service@main
        with:
          web-artifact-name: "servers-integration-webapi"
          web-app-name: ${{ env.webAppName }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
